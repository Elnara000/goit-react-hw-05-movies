{"version":3,"file":"static/js/805.e34fee90.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAS,mCAER,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACoBF,EAAAA,EAAAA,IAAA,sCAAyCC,IAD7D,uBACKE,EADL,EACKA,KADL,kBAGIA,EAAKC,SAHT,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,yFACoBN,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,kBAAmDK,EAAnD,oBADpB,uBACKH,EADL,EACKA,KADL,kBAGIA,EAAKC,SAHT,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,yFACoBR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,oBACOP,EADP,oBADpB,uBACKE,EADL,EACKA,KADL,kBAKIA,GALJ,kEAQE,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,yFACkBR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,oBADlB,uBACGE,EADH,EACGA,KADH,kBAKEA,EAAKO,MALP,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,yFACkBR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,oBADlB,uBACGE,EADH,EACGA,KADH,kBAKEA,EAAKC,SALP,kE,oFC9BM,SAASQ,EAAT,GAAiC,IAAXC,EAAU,EAAVA,OAC7BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACGI,KAFID,EADC,KASjB,C,mHCZc,SAASK,EAAT,GAA6C,IAAxBC,EAAuB,EAAvBA,oBAClC,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAcA,OACE,kBAAMC,SATe,SAAAC,GACrBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfR,EAAoB,CAAEE,KAAAA,IACtBK,EAAKE,OAEN,EAGC,WACE,kBAAOC,KAAK,OAAOC,MAAOT,EAAMU,SAdb,SAAAP,GACrBF,EAAQE,EAAEQ,OAAOF,MAClB,KAaG,mBAAQD,KAAK,aAGlB,C,aClBc,SAASI,IAAU,IAAD,EAC/B,GAA4Bb,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeyB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,eAApB,QAA+B,IAE9CC,EAAAA,EAAAA,YAAU,WACU,KAAdF,IAEJrC,EAAAA,EAAAA,IAAaqC,GAAWG,KAAKP,EAC9B,GAAE,CAACI,IAMJ,OACE,iCACE,SAACpB,EAAD,CAAWC,oBANW,SAAC,GAAc,IAAZE,EAAW,EAAXA,KAE3BgB,EAD4B,KAAThB,EAAc,CAAEA,KAAAA,GAAS,CAAC,EAE9C,KAIG,SAACb,EAAA,EAAD,CAAYC,OAAQA,MAGzB,C","sources":["api.js","components/MoviesList.jsx","components/InputForm.jsx","page/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY= 'effb95ae19c64d6c8d89a74ddcfcb22f';\n\nexport async function getTrending() {\n    const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n  \n    return data.results;\n};\n\nexport async function searchMovies(query) {\n    const { data } = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}&language=en-US`);\n  \n    return data.results;\n};\n\nexport async function getMovieById(movieId) {\n    const { data } = await axios.get(\n      `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n  \n    return data;\n  };\n  \n  export async function getCastMovie(movieId) {\n    const { data } = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n  \n    return data.cast;\n  };\n  export async function getReviewsMovie(movieId) {\n    const { data } = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n  \n    return data.results;\n  };","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nexport default function MoviesList({ movies }) {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, original_title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {original_title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object),\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function InputForm({ setSearchedToParams }) {\n  const [name, setName] = useState('');\n\n  const onHandleChange = e => {\n    setName(e.target.value);\n  };\n\n  const onHandleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchedToParams({ name });\n    form.reset();\n    //do not work\n  };\n\n  return (\n    <form onSubmit={onHandleSubmit}>\n      <input type=\"text\" value={name} onChange={onHandleChange} />\n      <button type=\"submit\"></button>\n    </form>\n  );\n}\nInputForm.propTypes = {\n  setSearchedToParams: PropTypes.func,\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport MoviesList from 'components/MoviesList';\nimport InputForm from '../components/InputForm';\nimport { searchMovies } from '../api';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('name') ?? '';\n\n  useEffect(() => {\n    if (movieName === '') return;\n\n    searchMovies(movieName).then(setMovies);\n  }, [movieName]);\n\n  const updateQueryString = ({ name }) => {\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  };\n  return (\n    <>\n      <InputForm setSearchedToParams={updateQueryString} />\n      <MoviesList movies={movies} />\n    </>\n  );\n}\n"],"names":["axios","API_KEY","getTrending","data","results","searchMovies","query","getMovieById","movieId","getCastMovie","cast","getReviewsMovie","MoviesList","movies","location","useLocation","map","id","original_title","to","state","from","InputForm","setSearchedToParams","useState","name","setName","onSubmit","e","preventDefault","form","currentTarget","reset","type","value","onChange","target","Movies","setMovies","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","then"],"sourceRoot":""}