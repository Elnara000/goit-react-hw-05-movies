{"version":3,"file":"static/js/597.99fc081a.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAS,mCAER,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACoBF,EAAAA,EAAAA,IAAA,sCAAyCC,IAD7D,uBACKE,EADL,EACKA,KADL,kBAGIA,EAAKC,SAHT,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,yFACoBN,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,kBAAmDK,EAAnD,oBADpB,uBACKH,EADL,EACKA,KADL,kBAGIA,EAAKC,SAHT,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,yFACoBR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,oBACOP,EADP,oBADpB,uBACKE,EADL,EACKA,KADL,kBAKIA,GALJ,kEAQE,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,yFACkBR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,oBADlB,uBACGE,EADH,EACGA,KADH,kBAKEA,EAAKO,MALP,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,yFACkBR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,oBADlB,uBACGE,EADH,EACGA,KADH,kBAKEA,EAAKC,SALP,kE,oHC5BM,SAASQ,IACtB,IAAQJ,GAAYK,EAAAA,EAAAA,MAAZL,QACR,GAAwBM,EAAAA,EAAAA,UAAS,IAAjC,eAAOJ,EAAP,KAAaK,EAAb,MACAC,EAAAA,EAAAA,YAAU,YACRP,EAAAA,EAAAA,IAAaD,GAASS,KAAKF,EAC5B,GAAE,CAACP,IAGJ,OACE,+BACE,yBACGE,EAAKQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,UAApC,OACR,0BACGF,IACC,gBACEG,IATE,mCASaH,EACfI,IAAKH,EACLI,MAAO,OAGX,0BACE,0BAAM,YAAc,IAAEJ,MAExB,0BACE,0BAAM,eAAiB,IAAEC,OAZpBH,EADD,OAoBjB,C","sources":["api.js","components/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY= 'effb95ae19c64d6c8d89a74ddcfcb22f';\n\nexport async function getTrending() {\n    const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n  \n    return data.results;\n};\n\nexport async function searchMovies(query) {\n    const { data } = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}&language=en-US`);\n  \n    return data.results;\n};\n\nexport async function getMovieById(movieId) {\n    const { data } = await axios.get(\n      `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n  \n    return data;\n  };\n  \n  export async function getCastMovie(movieId) {\n    const { data } = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n  \n    return data.cast;\n  };\n  export async function getReviewsMovie(movieId) {\n    const { data } = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n  \n    return data.results;\n  };","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastMovie } from '../api';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    getCastMovie(movieId).then(setCast);\n  }, [movieId]);\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n\n  return (\n    <>\n      <div>\n        {cast.map(({ id, profile_path, original_name, character }) => (\n          <li key={id}>\n            {profile_path && (\n              <img\n                src={IMG_URL + profile_path}\n                alt={original_name}\n                width={200}\n              />\n            )}\n            <p>\n              <span> Actor:</span> {original_name}\n            </p>\n            <p>\n              <span>Character:</span> {character}\n            </p>\n          </li>\n        ))}\n      </div>\n    </>\n  );\n}\n"],"names":["axios","API_KEY","getTrending","data","results","searchMovies","query","getMovieById","movieId","getCastMovie","cast","getReviewsMovie","Cast","useParams","useState","setCast","useEffect","then","map","id","profile_path","original_name","character","src","alt","width"],"sourceRoot":""}