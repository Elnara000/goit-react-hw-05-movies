{"version":3,"file":"static/js/336.640d2aff.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAS,mCAER,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACoBF,EAAAA,EAAAA,IAAA,sCAAyCC,IAD7D,uBACKE,EADL,EACKA,KADL,kBAGIA,EAAKC,SAHT,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,yFACoBN,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,kBAAmDK,EAAnD,oBADpB,uBACKH,EADL,EACKA,KADL,kBAGIA,EAAKC,SAHT,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,yFACoBR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,oBACOP,EADP,oBADpB,uBACKE,EADL,EACKA,KADL,kBAKIA,GALJ,kEAQE,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,yFACkBR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,oBADlB,uBACGE,EADH,EACGA,KADH,kBAKEA,EAAKO,MALP,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,yFACkBR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,oBADlB,uBACGE,EADH,EACGA,KADH,kBAKEA,EAAKC,SALP,kE,4HC7BM,SAASQ,IAAe,IAAD,MAC5BJ,GAAYK,EAAAA,EAAAA,MAAZL,QACR,GAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,MACAC,EAAAA,EAAAA,YAAU,YACRV,EAAAA,EAAAA,IAAaC,GAASU,KAAKF,EAC5B,GAAE,CAACR,IAEJ,IACQW,EACNJ,EADMI,YAAaC,EACnBL,EADmBK,eAAgBC,EACnCN,EADmCM,aAAcC,EACjDP,EADiDO,WAAYC,EAC7DR,EAD6DQ,SAEzDC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAC3D,OACE,iCACE,SAAC,KAAD,CAAMC,GAAIJ,EAAoBK,QAA9B,SAAuC,YACtCZ,IACC,gBAAKa,IATK,mCASUb,EAAac,IAAKb,EAAgBc,MAAO,OAE/D,0BACGd,EAAe,KAAC,0BAAOC,QAE1B,uBAAIC,KACJ,wBAAI,cACJ,uBAAIC,KACJ,wBAAI,YACJ,mCACGR,EAAOoB,cADV,aACG,EAAeC,KAAI,SAAAC,GAAK,OACvB,wBAAoBA,EAAMC,MAAjBD,EAAME,GADQ,OAI3B,SAAC,KAAD,CAAMT,GAAG,OAAT,SAAgB,UAChB,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,aACnB,SAAC,KAAD,MAGL,C","sources":["api.js","page/MovieDetail.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY= 'effb95ae19c64d6c8d89a74ddcfcb22f';\n\nexport async function getTrending() {\n    const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n  \n    return data.results;\n};\n\nexport async function searchMovies(query) {\n    const { data } = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}&language=en-US`);\n  \n    return data.results;\n};\n\nexport async function getMovieById(movieId) {\n    const { data } = await axios.get(\n      `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n  \n    return data;\n  };\n  \n  export async function getCastMovie(movieId) {\n    const { data } = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n  \n    return data.cast;\n  };\n  export async function getReviewsMovie(movieId) {\n    const { data } = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n  \n    return data.results;\n  };","import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useEffect, useRef, useState } from 'react';\nimport { getMovieById } from '../api';\nexport default function MovieDetail() {\n  const { movieId } = useParams();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    getMovieById(movieId).then(setMovies);\n  }, [movieId]);\n\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n  const { poster_path, original_title, release_date, popularity, overview } =\n    movies;\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n  return (\n    <>\n      <Link to={backLinkLocationRef.current}>Go back</Link>\n      {poster_path && (\n        <img src={IMG_URL + poster_path} alt={original_title} width={200} />\n      )}\n      <h1>\n        {original_title} <span>{release_date}</span>\n      </h1>\n      <p>{popularity}</p>\n      <h2>Overview</h2>\n      <p>{overview}</p>\n      <h3>Genres</h3>\n      <div>\n        {movies.genres?.map(genre => (\n          <li key={genre.id}>{genre.name}</li>\n        ))}\n      </div>\n      <Link to=\"cast\">Cast</Link>\n      <Link to=\"reviews\">Reviews</Link>\n      <Outlet />\n    </>\n  );\n}\n"],"names":["axios","API_KEY","getTrending","data","results","searchMovies","query","getMovieById","movieId","getCastMovie","cast","getReviewsMovie","MovieDetail","useParams","useState","movies","setMovies","useEffect","then","poster_path","original_title","release_date","popularity","overview","location","useLocation","backLinkLocationRef","useRef","state","from","to","current","src","alt","width","genres","map","genre","name","id"],"sourceRoot":""}